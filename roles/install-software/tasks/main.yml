- name: Install Docker Repo's Public Key
  apt_key: keyserver=p80.pool.sks-keyservers.net id=58118E89F3A912897C070ADBF76221572C52609D

- name: Add Docker Sources (HTTPS)
  lineinfile:
    create: yes
    dest: /etc/apt/sources.list.d/docker.list
    line: 'deb https://apt.dockerproject.org/repo ubuntu-xenial main'
  when: inventory_hostname == "oob-mgmt-server"

- name: Add Docker Sources (HTTP)
  lineinfile:
    create: yes
    dest: /etc/apt/sources.list.d/docker.list
    line: 'deb http://apt.dockerproject.org/repo ubuntu-xenial main'
  when: inventory_hostname != "oob-mgmt-server"

- name: Install Docker, APT-Cacher-NG
  apt: name={{item}} state=installed update_cache=yes
  with_items:
    - docker-engine
    - apt-cacher-ng
    - python-pip
  when: inventory_hostname == "oob-mgmt-server"

- name: Setup Servers to use Apt-Cacher
  lineinfile:
    create: yes
    dest: /etc/apt/apt.conf.d/90apt-proxy
    line: 'Acquire::http::Proxy "http://192.168.0.254:3142";'
  when: inventory_hostname != "oob-mgmt-server"

- name: Install Docker, Ifupdown2 and PIP
  apt: name={{item}} state=installed update_cache=yes
  with_items:
    - docker-engine
    - ifupdown2
    - python-pip
  when: inventory_hostname != "oob-mgmt-server"

- name: Add Docker-py Module
  pip: name=docker-py

- name: Allow IfUpdown2 to Run at Boot
  lineinfile:
    dest: "/lib/systemd/system/networking.service"
    regexp: '^RemainAfterExit'
    insertafter: '^\[Service\]'
    line: 'RemainAfterExit=yes'
  when: inventory_hostname != "oob-mgmt-server"

- name: Start the Docker Daemon (if it isn't already running)
  service: name=docker state=started

